{"ast":null,"code":"export async function fetchId() {\n  const response = await fetch(\"https://hacker-news.firebaseio.com/v0/topstories.json\");\n  const id = await response.json();\n  return id;\n}\nconst stories = [];\nexport function mapUrlById(id) {\n  const getId = id;\n  getId.map(async (item, index) => {\n    const response = await fetch(`https://hacker-news.firebaseio.com/v0/item/${item}.json`);\n    stories.push(await response.json());\n  });\n  console.log(stories);\n  return stories;\n}\nexport { stories };\n\n// get the array of ids\n// then for each element in the ids array map urls to a state\n// fetch data from the state and pass it in the body","map":{"version":3,"names":["fetchId","response","fetch","id","json","stories","mapUrlById","getId","map","item","index","push","console","log"],"sources":["/home/qb-rajup/Desktop/Personal folder/Web Develpment Projects/Qburst activities/hackernews_clone/src/API/fetch.js"],"sourcesContent":["export async function fetchId() {\n  const response = await fetch(\n    \"https://hacker-news.firebaseio.com/v0/topstories.json\"\n  );\n  const id = await response.json();\n  return id;\n}\nconst stories = [];\nexport function mapUrlById(id) {\n  const getId = id;\n\n  getId.map(async (item, index) => {\n    const response =  await fetch(\n      `https://hacker-news.firebaseio.com/v0/item/${item}.json`\n    );\n\n    stories.push(await response.json());\n  });\n  console.log(stories);\n\n  return stories;\n}\nexport { stories };\n\n// get the array of ids\n// then for each element in the ids array map urls to a state\n// fetch data from the state and pass it in the body\n"],"mappings":"AAAA,OAAO,eAAeA,OAAOA,CAAA,EAAG;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,uDACF,CAAC;EACD,MAAMC,EAAE,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAChC,OAAOD,EAAE;AACX;AACA,MAAME,OAAO,GAAG,EAAE;AAClB,OAAO,SAASC,UAAUA,CAACH,EAAE,EAAE;EAC7B,MAAMI,KAAK,GAAGJ,EAAE;EAEhBI,KAAK,CAACC,GAAG,CAAC,OAAOC,IAAI,EAAEC,KAAK,KAAK;IAC/B,MAAMT,QAAQ,GAAI,MAAMC,KAAK,CAC1B,8CAA6CO,IAAK,OACrD,CAAC;IAEDJ,OAAO,CAACM,IAAI,CAAC,MAAMV,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;EACrC,CAAC,CAAC;EACFQ,OAAO,CAACC,GAAG,CAACR,OAAO,CAAC;EAEpB,OAAOA,OAAO;AAChB;AACA,SAASA,OAAO;;AAEhB;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}