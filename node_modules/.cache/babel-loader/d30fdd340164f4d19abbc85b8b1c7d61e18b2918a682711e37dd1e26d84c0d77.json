{"ast":null,"code":"export async function fetchId() {\n  const response = await fetch(\"https://hacker-news.firebaseio.com/v0/topstories.json\");\n  const id = await response.json();\n  return id;\n}\nexport async function mapUrlById(id) {\n  const getId = id;\n  console.log(getId[0]);\n  getId.map(item => async function (item) {\n    const response = await fetch(`https://hacker-news.firebaseio.com/v0/item/${item}.json`);\n    const url = await response.json();\n    return u;\n  }());\n}\n// get the array of ids\n// then for each element in the ids array map urls to a state\n// fetch data from the state and pass it in the body","map":{"version":3,"names":["fetchId","response","fetch","id","json","mapUrlById","getId","console","log","map","item","url","u"],"sources":["/home/qb-rajup/Desktop/Personal folder/Web Develpment Projects/Qburst activities/hackernews_clone/src/API/fetch.js"],"sourcesContent":["export async function fetchId() {\n  const response = await fetch(\n    \"https://hacker-news.firebaseio.com/v0/topstories.json\"\n  );\n  const id = await response.json();\n  return id;\n}\nexport async function mapUrlById(id) {\n  const getId = id;\n  console.log(getId[0]);\n  getId.map((item) =>\n    (async function (item) {\n      const response = await fetch(\n        `https://hacker-news.firebaseio.com/v0/item/${item}.json`\n      );\n      const url = await response.json();\n      return u;\n    })()\n  );\n}\n// get the array of ids\n// then for each element in the ids array map urls to a state\n// fetch data from the state and pass it in the body\n"],"mappings":"AAAA,OAAO,eAAeA,OAAOA,CAAA,EAAG;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,uDACF,CAAC;EACD,MAAMC,EAAE,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAChC,OAAOD,EAAE;AACX;AACA,OAAO,eAAeE,UAAUA,CAACF,EAAE,EAAE;EACnC,MAAMG,KAAK,GAAGH,EAAE;EAChBI,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC,CAAC,CAAC;EACrBA,KAAK,CAACG,GAAG,CAAEC,IAAI,IACZ,gBAAgBA,IAAI,EAAE;IACrB,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CACzB,8CAA6CQ,IAAK,OACrD,CAAC;IACD,MAAMC,GAAG,GAAG,MAAMV,QAAQ,CAACG,IAAI,CAAC,CAAC;IACjC,OAAOQ,CAAC;EACV,CAAC,CAAE,CACL,CAAC;AACH;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}