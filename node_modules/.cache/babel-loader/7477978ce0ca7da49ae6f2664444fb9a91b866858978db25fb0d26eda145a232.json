{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { fetchData } from \"../../API\";\nexport const Body = () => {\n  _s();\n  var id = 0;\n  const [data, setData] = useState();\n  const [story, setStory] = useState([]);\n  useEffect(() => {\n    while (story.length < 30) {\n      id = id + 1;\n      fetchData(setData, id);\n      if (data.type === \"story\") {}\n    }\n  }, []);\n  console.log(story);\n\n  // return <div className=\"bg-coffee-l\">{data && data.title}</div>;\n};\n_s(Body, \"Iy4r9nKgt4kKimiOlYLJNmLZTDA=\");\n_c = Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useEffect","useState","fetchData","Body","_s","id","data","setData","story","setStory","length","type","console","log","_c","$RefreshReg$"],"sources":["/home/qb-rajup/Desktop/Personal folder/Web Develpment Projects/Qburst activities/hackernews_clone/src/app/components/Body.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { fetchData } from \"../../API\";\n\nexport const Body = () => {\n  var id = 0;\n  const [data, setData] = useState();\n  const [story,setStory]= useState([])\n  useEffect(() => {\n    while (story.length < 30) {\n      id=id+1;\n      fetchData(setData, id);\n      if (data.type === \"story\") {\n        \n      }\n    }\n   \n  }, []);\n  console.log(story);\n  \n\n  // return <div className=\"bg-coffee-l\">{data && data.title}</div>;\n};\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,WAAW;AAErC,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,IAAIC,EAAE,GAAG,CAAC;EACV,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,CAAC;EAClC,MAAM,CAACO,KAAK,EAACC,QAAQ,CAAC,GAAER,QAAQ,CAAC,EAAE,CAAC;EACpCD,SAAS,CAAC,MAAM;IACd,OAAOQ,KAAK,CAACE,MAAM,GAAG,EAAE,EAAE;MACxBL,EAAE,GAACA,EAAE,GAAC,CAAC;MACPH,SAAS,CAACK,OAAO,EAAEF,EAAE,CAAC;MACtB,IAAIC,IAAI,CAACK,IAAI,KAAK,OAAO,EAAE,CAE3B;IACF;EAEF,CAAC,EAAE,EAAE,CAAC;EACNC,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;;EAGlB;AACF,CAAC;AAACJ,EAAA,CAlBWD,IAAI;AAAAW,EAAA,GAAJX,IAAI;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}