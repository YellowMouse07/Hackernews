{"ast":null,"code":"var _jsxFileName = \"/home/qb-rajup/Desktop/Personal folder/Web Develpment Projects/Qburst activities/hackernews_clone/src/app/pages/home/body/topstory/Time.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Time = ({\n  time\n}) => {\n  const date = new Date();\n  const timeStamp = date.getTime();\n  const seconds = Math.floor(timeStamp / 1000);\n  const oldTimeStamp = Math.floor(new Date(time / 1000));\n  const difference = seconds - oldTimeStamp;\n  let output = ``;\n  if (difference < 60) {\n    // Less than a minute has passed:\n    output = `${difference} seconds ago`;\n  } else if (difference < 3600) {\n    // Less than an hour has passed:\n    output = `${Math.floor(difference / 60)} minutes ago`;\n  } else if (difference < 86400) {\n    // Less than a day has passed:\n    output = `${Math.floor(difference / 3600)} hours ago`;\n  } else if (difference < 2620800) {\n    // Less than a month has passed:\n    output = `${Math.floor(difference / 86400)} days ago`;\n  } else if (difference < 31449600) {\n    // Less than a year has passed:\n    output = `${Math.floor(difference / 2620800)} months ago`;\n  } else {\n    // More than a year has passed:\n    output = `${Math.floor(difference / 31449600)} years ago`;\n  }\n  // const diffTime = convertedDate;\n  // const diffMinutes = Math.floor((diffTime / (1000 * 60)) % 60);\n  // const diffHours = Math.floor((diffTime / (1000 * 60 * 60)) % 24);\n  // const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n  // const diffMonths = Math.floor(diffTime / (1000 * 60 * 60 * 24 * 30));\n\n  const Months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  if (diffMinutes < 60) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [diffMinutes, \" minutes ago\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  } else if (diffHours < 24) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [diffHours, \" hours ago\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  } else if (diffDays < 30) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [diffDays, \" days ago\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  } else if (diffMonths < 12) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [diffMonths, \" months ago\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"on \", Months[convertedDate.getMonth()], \" \", convertedDate.getFullYear()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n};\n_c = Time;\nexport default Time;\nvar _c;\n$RefreshReg$(_c, \"Time\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Time","time","date","Date","timeStamp","getTime","seconds","Math","floor","oldTimeStamp","difference","output","Months","diffMinutes","children","fileName","_jsxFileName","lineNumber","columnNumber","diffHours","diffDays","diffMonths","convertedDate","getMonth","getFullYear","_c","$RefreshReg$"],"sources":["/home/qb-rajup/Desktop/Personal folder/Web Develpment Projects/Qburst activities/hackernews_clone/src/app/pages/home/body/topstory/Time.jsx"],"sourcesContent":["import React from \"react\";\n\nconst Time = ({ time }) => {\n  const date = new Date();\n  const timeStamp = date.getTime();\n  const seconds = Math.floor(timeStamp / 1000);\n  const oldTimeStamp = Math.floor(new Date(time / 1000));\n  const difference = seconds - oldTimeStamp;\n  let output = ``;\nif (difference < 60) {\n    // Less than a minute has passed:\n    output = `${difference} seconds ago`;\n} else if (difference < 3600) {\n    // Less than an hour has passed:\n    output = `${Math.floor(difference / 60)} minutes ago`;\n} else if (difference < 86400) {\n    // Less than a day has passed:\n    output = `${Math.floor(difference / 3600)} hours ago`;\n} else if (difference < 2620800) {\n    // Less than a month has passed:\n    output = `${Math.floor(difference / 86400)} days ago`;\n} else if (difference < 31449600) {\n    // Less than a year has passed:\n    output = `${Math.floor(difference / 2620800)} months ago`;\n} else {\n    // More than a year has passed:\n    output = `${Math.floor(difference / 31449600)} years ago`;\n}\n  // const diffTime = convertedDate;\n  // const diffMinutes = Math.floor((diffTime / (1000 * 60)) % 60);\n  // const diffHours = Math.floor((diffTime / (1000 * 60 * 60)) % 24);\n  // const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n  // const diffMonths = Math.floor(diffTime / (1000 * 60 * 60 * 24 * 30));\n\n  const Months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  if (diffMinutes < 60) {\n    return <div>{diffMinutes} minutes ago</div>;\n  } else if (diffHours < 24) {\n    return <div>{diffHours} hours ago</div>;\n  } else if (diffDays < 30) {\n    return <div>{diffDays} days ago</div>;\n  } else if (diffMonths < 12) {\n    return <div>{diffMonths} months ago</div>;\n  } else {\n    return (\n      <div>\n        on {Months[convertedDate.getMonth()]} {convertedDate.getFullYear()}\n      </div>\n    );\n  }\n};\n\nexport default Time;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}