{"ast":null,"code":"var _jsxFileName = \"/home/qb-rajup/Desktop/Personal folder/Web Develpment Projects/Qburst activities/hackernews_clone/src/app/pages/home/body/topstory/Time.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Time = ({\n  time\n}) => {\n  const date = new Date();\n  const timeStamp = date.getTime();\n  const seconds = Math.floor(timeStamp / 1000);\n  const oldTimeStamp = Math.floor(new Date(time / 1000));\n  const difference = mseconds - oldTimeStamp;\n  let output = ``;\n  if (difference < 60) {\n    // Less than a minute has passed:\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [difference, \" seconds ago\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  } else if (difference < 3600) {\n    // Less than an hour has passed:\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Math.floor(difference / 60), \" minutes ago \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  } else if (difference < 86400) {\n    // Less than a day has passed:\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Math.floor(difference / 3600), \" hours ago\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  } else if (difference < 2620800) {\n    // Less than a month has passed:\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Math.floor(difference / 86400), \" days ago\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  } else if (difference < 31449600) {\n    // Less than a year has passed:\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Math.floor(difference / 2620800), \" months ago\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  } else {\n    // More than a year has passed:\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Math.floor(difference / 31449600), \" years ago\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  const Months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n};\n_c = Time;\nexport default Time;\nvar _c;\n$RefreshReg$(_c, \"Time\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Time","time","date","Date","timeStamp","getTime","seconds","Math","floor","oldTimeStamp","difference","mseconds","output","children","fileName","_jsxFileName","lineNumber","columnNumber","Months","_c","$RefreshReg$"],"sources":["/home/qb-rajup/Desktop/Personal folder/Web Develpment Projects/Qburst activities/hackernews_clone/src/app/pages/home/body/topstory/Time.jsx"],"sourcesContent":["import React from \"react\";\n\nconst Time = ({ time }) => {\n  const date = new Date();\n  const timeStamp = date.getTime();\n  const seconds = Math.floor(timeStamp / 1000);\n  const oldTimeStamp = Math.floor(new Date(time / 1000));\n  const difference = mseconds - oldTimeStamp;\n  let output = ``;\n  if (difference < 60) {\n    // Less than a minute has passed:\n\n    return <div>{difference} seconds ago</div>;\n  } else if (difference < 3600) {\n    // Less than an hour has passed:\n    return <div>{Math.floor(difference / 60)} minutes ago </div>;\n  } else if (difference < 86400) {\n    // Less than a day has passed:\n    return <div>{Math.floor(difference / 3600)} hours ago</div>;\n  } else if (difference < 2620800) {\n    // Less than a month has passed:\n    return <div>{Math.floor(difference / 86400)} days ago</div>;\n  } else if (difference < 31449600) {\n    // Less than a year has passed:\n    return <div>{Math.floor(difference / 2620800)} months ago</div>;\n  } else {\n    // More than a year has passed:\n    return <div>{Math.floor(difference / 31449600)} years ago</div>;\n  }\n\n  const Months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n};\n\nexport default Time;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACzB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;EACvB,MAAMC,SAAS,GAAGF,IAAI,CAACG,OAAO,CAAC,CAAC;EAChC,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACJ,SAAS,GAAG,IAAI,CAAC;EAC5C,MAAMK,YAAY,GAAGF,IAAI,CAACC,KAAK,CAAC,IAAIL,IAAI,CAACF,IAAI,GAAG,IAAI,CAAC,CAAC;EACtD,MAAMS,UAAU,GAAGC,QAAQ,GAAGF,YAAY;EAC1C,IAAIG,MAAM,GAAI,EAAC;EACf,IAAIF,UAAU,GAAG,EAAE,EAAE;IACnB;;IAEA,oBAAOX,OAAA;MAAAc,QAAA,GAAMH,UAAU,EAAC,cAAY;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC5C,CAAC,MAAM,IAAIP,UAAU,GAAG,IAAI,EAAE;IAC5B;IACA,oBAAOX,OAAA;MAAAc,QAAA,GAAMN,IAAI,CAACC,KAAK,CAACE,UAAU,GAAG,EAAE,CAAC,EAAC,eAAa;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9D,CAAC,MAAM,IAAIP,UAAU,GAAG,KAAK,EAAE;IAC7B;IACA,oBAAOX,OAAA;MAAAc,QAAA,GAAMN,IAAI,CAACC,KAAK,CAACE,UAAU,GAAG,IAAI,CAAC,EAAC,YAAU;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC7D,CAAC,MAAM,IAAIP,UAAU,GAAG,OAAO,EAAE;IAC/B;IACA,oBAAOX,OAAA;MAAAc,QAAA,GAAMN,IAAI,CAACC,KAAK,CAACE,UAAU,GAAG,KAAK,CAAC,EAAC,WAAS;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC7D,CAAC,MAAM,IAAIP,UAAU,GAAG,QAAQ,EAAE;IAChC;IACA,oBAAOX,OAAA;MAAAc,QAAA,GAAMN,IAAI,CAACC,KAAK,CAACE,UAAU,GAAG,OAAO,CAAC,EAAC,aAAW;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjE,CAAC,MAAM;IACL;IACA,oBAAOlB,OAAA;MAAAc,QAAA,GAAMN,IAAI,CAACC,KAAK,CAACE,UAAU,GAAG,QAAQ,CAAC,EAAC,YAAU;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjE;EAEA,MAAMC,MAAM,GAAG,CACb,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACN;AACH,CAAC;AAACC,EAAA,GA1CInB,IAAI;AA4CV,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}